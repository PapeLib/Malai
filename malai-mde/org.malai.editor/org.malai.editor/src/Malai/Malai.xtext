// automatically generated by Xtext
grammar org.Malai with org.eclipse.xtext.common.Terminals

import "fr.inria.diverse.interactiveSystem" 
import "fr.inria.diverse.malai" as malai
//import "http://www.eclipse.org/emf/2002/Ecore" as ecore

interactiveSystem returns interactiveSystem:
	{interactiveSystem}
	'interactiveSystem'
	'{'
		('instruments' '{' instruments+=Instrument ( "," instruments+=Instrument)* '}' )?
		('interactions' '{' interactions+=Interaction ( "," interactions+=Interaction)* '}' )?
		('actions' '{' actions+=Action ( "," actions+=Action)* '}' )?
		('events' '{' events+=Event ( "," events+=Event)* '}' )?
		('widgets' '{' widgets+=Widget ( "," widgets+=Widget)* '}' )?
		('mapping' '{'(mapping+=InteractorWidgetMapping)* '}')?
	'}';

InteractorWidgetMapping returns InteractorWidgetMapping:
	{InteractorWidgetMapping}
	interactor=[malai::Interactor|STRING] ':'
	binds+=TransitionWidgetBinding (',' binds+=TransitionWidgetBinding)*
;

TransitionWidgetBinding returns TransitionWidgetBinding:
	{TransitionWidgetBinding}
	transition=[malai::Transition|STRING] '[' widgetIDs+=STRING (',' widgetIDs+=STRING)* ']'
;


Widget returns malai::Widget:
	Tree | Slider | ProgressBar | Table | Label | TextArea | TextField | Spinner | MultiLineList | SingleLineList | Panel | Window_Impl | DialogueBox | SplitPane | TabbedPanel | Button_Impl | ToggleButton | Menu_Impl | CheckBox | RadioButton | ToggleMenu | RadioMenu;


State returns malai::State:
	AbortingState | TerminalState | StandardState_Impl | InitState;


Instrument returns malai::Instrument:
	{malai::Instrument}
	(initiallyActivated?='initiallyActivated')?
	'Instrument' name=STRING
	'{'
		('description' description=STRING)?
		('author' author=STRING)?
		('version' version=STRING)?
		('dateCreation' dateCreation=STRING)?
		('interimFeedback' interimFeedback=STRING)?
		('subscribedWidgets' '(' subscribedWidgets+=[malai::Widget|STRING] ( "," subscribedWidgets+=[malai::Widget|STRING])* ')' )?
		('interactors' '{' interactors+=Interactor ( "," interactors+=Interactor)* '}' )?
//		('clazz' clazz=EClass)?
//		('helpers' '{' helpers+=EClassifier ( "," helpers+=EClassifier)* '}' )?
		('providedWidgets' '{' providedWidgets+=Widget ( "," providedWidgets+=Widget)* '}' )?
	'}';


Action returns malai::Action:
	(undoable?='undoable')?
	(modifyInstrument?='modifyInstrument')?
	'Action' name=STRING
	'{'
		('execute' execute=STRING)?
		('canDo' canDo=STRING)?
		('undo' undo=STRING)?
		('redo' redo=STRING)?
		('cancelledBy' '(' cancelledBy+=[malai::Action|STRING] ( "," cancelledBy+=[malai::Action|STRING])* ')' )?
//		'clazz' clazz=EClass
		('dependencies' '{' dependencies+=ActionDependency ( "," dependencies+=ActionDependency)* '}' )?
		('activated' '{' activatedInstruments+=[malai::Instrument|STRING] ( "," activatedInstruments+=[malai::Instrument|STRING])* '}')?
		('deactivated' '{' deactivatedInstruments+=[malai::Instrument|STRING] ( "," deactivatedInstruments+=[malai::Instrument|STRING])* '}')?
	'}';
	
//ActionInstrument returns action::ActionInstrument:
//	undoable?='undoable'
//	(modifyInstrument?='modifyInstrument')?
//	'Action' name=STRING
//	'{'
//		'instruments' instruments+=[instrument::Instrument|STRING] ( "," instruments+=[instrument::Instrument|STRING])*
//		('execute' execute=STRING)?
//		('canDo' canDo=STRING)?
//		('undo' undo=STRING)?
//		('redo' redo=STRING)?
//		('cancelledBy' '(' cancelledBy+=[action::Action|STRING] ( "," cancelledBy+=[action::Action|STRING])* ')' )?
//		'clazz' clazz=EClass
//		('dependencies' '{' dependencies+=ActionDependency ( "," dependencies+=ActionDependency)* '}' )?
//	'}'
//;

Event returns malai::Event:
	'Event' name=STRING;
//	'{'
//		'clazz' clazz=EClass
//	'}';


Interactor returns malai::Interactor:
	executeOnUpdate?='executeOnUpdate'
	'Interactor' name=STRING
	'{'
		('description' description=STRING)?
		('interimFeedback' interimFeedback=STRING)?
		('isConditionRespected' isConditionRespected=STRING)?
		('updateAction' updateAction=STRING)?
		('initialiseAction' initialiseAction=STRING)?
		'interaction' interaction=[malai::Interaction|STRING]
		'action' action=[malai::Action|STRING]
//		('clazz' clazz=EClass)?
	'}';


Interaction returns malai::Interaction:
	activated?='activated'
	'Interaction' name=STRING
	'{'
		('description' description=STRING)?
		('author' author=STRING)?
		('dateCreation' dateCreation=STRING)?
		('version' version=STRING)?
		('initState' initState=[malai::InitState|STRING])?
		('currentState' currentState=[malai::State|STRING])?
		('states' '{' states+=State (states+=State)* '}' )?
//		'clazz' clazz=EClass
//		('helpers' '{' helpers+=EClassifier ( "," helpers+=EClassifier)* '}' )?
	'}';

Transition returns malai::Transition:
//	'Transition'
	name=STRING '(' event=[malai::Event|STRING] ')' ':' inputState=[malai::State|STRING] '=>' outputState=[malai::State|STRING]
	('{'
		('description' description=STRING)?
		('condition' condition=STRING)?
		('actions' actions=STRING)?
		('hid' hid=INT)?
//		'inputState' inputState=[interaction::State|STRING]
//		'outputState' outputState=[interaction::State|STRING]
//		'event' event=[event::Event|STRING]
	'}')?;

InitState returns malai::InitState:
	{malai::InitState}
	'InitState'
	name=STRING
		('[' description=STRING ']')?
		(outputTransitions+=Transition ( "," outputTransitions+=Transition)* )?
	;
	
AbortingState returns malai::AbortingState:
	{malai::AbortingState}
	'AbortingState'
	name=STRING
		('[' description=STRING ']')?
		(outputTransitions+=Transition ( "," outputTransitions+=Transition)* )?
	;


TerminalState returns malai::TerminalState:
	{malai::TerminalState}
	'TerminalState'
	name=STRING
		('[' description=STRING ']')?
		(outputTransitions+=Transition ( "," outputTransitions+=Transition)* )?
	;


StandardState_Impl returns malai::StandardState:
	{malai::StandardState}
	'StandardState'
	name=STRING
		('[' description=STRING ']')?
		(outputTransitions+=Transition ( "," outputTransitions+=Transition)* )?
	;


ActionDependency returns malai::ActionDependency:
	'ActionDependency'
	name=STRING
	'{'
		'srcAction' srcAction=[malai::Action|STRING]
		'tgtActions' '(' tgtActions+=[malai::Action|STRING] ( "," tgtActions+=[malai::Action|STRING])* ')' 
	'}';


Tree returns malai::Tree:
	{malai::Tree}
	'Tree'
	name=STRING;

Slider returns malai::Slider:
	{malai::Slider}
	'Slider'
	name=STRING;

ProgressBar returns malai::ProgressBar:
	{malai::ProgressBar}
	'ProgressBar'
	name=STRING;

Table returns malai::Table:
	{malai::Table}
	'Table'
	name=STRING;

Label returns malai::Label:
	{malai::Label}
	'Label'
	name=STRING
	'{'
		('text' text=STRING)?
	'}';

TextArea returns malai::TextArea:
	{malai::TextArea}
	'TextArea'
	name=STRING
	'{'
		('text' text=STRING)?
	'}';

TextField returns malai::TextField:
	{malai::TextField}
	'TextField'
	name=STRING
	'{'
		('text' text=STRING)?
	'}';

Spinner returns malai::Spinner:
	{malai::Spinner}
	'Spinner'
	name=STRING
	'{'
		('text' text=STRING)?
	'}';

MultiLineList returns malai::MultiLineList:
	{malai::MultiLineList}
	'MultiLineList'
	name=STRING;

SingleLineList returns malai::SingleLineList:
	{malai::SingleLineList}
	'SingleLineList'
	name=STRING;

Panel returns malai::Panel:
	{malai::Panel}
	'Panel'
	name=STRING
	'{'
		('elements' '{' elements+=Widget ( "," elements+=Widget)* '}' )?
	'}';

Window_Impl returns malai::Window:
	{malai::Window}
	'Window'
	name=STRING
	'{'
		('elements' '{' elements+=Widget ( "," elements+=Widget)* '}' )?
	'}';

DialogueBox returns malai::DialogueBox:
	{malai::DialogueBox}
	'DialogueBox'
	name=STRING
	'{'
		('elements' '{' elements+=Widget ( "," elements+=Widget)* '}' )?
	'}';

SplitPane returns malai::SplitPane:
	{malai::SplitPane}
	'SplitPane'
	name=STRING
	'{'
		('elements' '{' elements+=Widget ( "," elements+=Widget)* '}' )?
	'}';

TabbedPanel returns malai::TabbedPanel:
	{malai::TabbedPanel}
	'TabbedPanel'
	name=STRING
	'{'
		('elements' '{' elements+=Widget ( "," elements+=Widget)* '}' )?
	'}';

Button_Impl returns malai::Button:
	{malai::Button}
	'Button'
	name=STRING;

ToggleButton returns malai::ToggleButton:
	{malai::ToggleButton}
	'ToggleButton'
	name=STRING;

Menu_Impl returns malai::Menu:
	{malai::Menu}
	'Menu'
	name=STRING;

CheckBox returns malai::CheckBox:
	{malai::CheckBox}
	'CheckBox'
	name=STRING;

RadioButton returns malai::RadioButton:
	{malai::RadioButton}
	'RadioButton'
	name=STRING;

ToggleMenu returns malai::ToggleMenu:
	{malai::ToggleMenu}
	'ToggleMenu'
	name=STRING;

RadioMenu returns malai::RadioMenu:
	{malai::RadioMenu}
	'RadioMenu'
	name=STRING;